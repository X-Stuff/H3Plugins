name: "windows-build"
on:
  push:
    branches: 
      - Github-workflow
    #tags:
    #  - release-herolimits-*

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Test powershell
      shell: powershell
      run: Compress-Archive -Path "${{ github.workspace }}\Readme.md", -DestinationPath xxx.zip
      
    - name: Fail
      run: exit 1

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.0
      with:
        vs-version: "[16.4,16.6]"

    - name: Run MSBuild
      run: msbuild H3.HeroLimits/H3.HeroLimits.vcxproj -t:Rebuild -p:Configuration=Release

    - name: Archive artifacts
      shell: powershell
      working-directory: ${{ github.workspace }}
      run: Compress-Archive -Path bin\Win32\Release\H3.HeroLimits.dll,bin\Win32\Release\Resources\options.ini -DestinationPath h3.HeroLimits.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Hero Limiter. Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./h3.HeroLimits.zip
        asset_name: h3.HeroLimits.zip
        asset_content_type: application/zip
